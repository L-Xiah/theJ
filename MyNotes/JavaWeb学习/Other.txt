#########################################################################################################
BS（浏览器/服务器结构）和CS（客户机/服务器结构）
BS和CS的区别以及优缺点

C/S又称Client/Server或客户/服务器模式。服务器通常采用高性能的PC、工作站或小型机，并采用大型数据库系统，如Oracle、Sybase、Informix或 SQL Server。客户端需要安装专用的客户端软件。

B/S是Brower/Server的缩写，客户机上只要安装一个浏览器（Browser），如Netscape Navigator或Internet Explorer，服务器安装Oracle、Sybase、Informix或 SQL Server等数据库。浏览器通过Web Server 同数据库进行数据交互。

C/S的优点是能充分发挥客户端PC的处理能力，很多工作可以在客户端处理后再提交给服务器。对应的优点就是客户端响应速度快。缺点主要有以下几个：

只适用于局域网。而随着互联网的飞速发展，移动办公和分布式办公越来越普及，这需要我们的系统具有扩展性。这种方式远程访问需要专门的技术，同时要对系统进行专门的设计来处理分布式的数据。

客户端需要安装专用的客户端软件。首先涉及到安装的工作量，其次任何一台电脑出问题，如病毒、硬件损坏，都需要进行安装或维护。特别是有很多分部或专卖店的情况，不是工作量的问题，而是路程的问题。还有，系统软件升级时，每一台客户机需要重新安装，其维护和升级成本非常高。

对客户端的操作系统一般也会有限制。可能适应于Win98, 但不能用于win2000或Windows XP。或者不适用于微软新的操作系统等等，更不用说Linux、Unix等。

B/S最大的优点就是可以在任何地方进行操作而不用安装任何专门的软件。只要有一台能上网的电脑就能使用，客户端零维护。系统的扩展非常容易，只要能上网，再由系统管理员分配一个用户名和密码，就可以使用了。甚至可以在线申请，通过公司内部的安全认证（如CA证书）后，不需要人的参与，系统可以自动分配给用户一个账号进入系统。
#########################################################################################################

#########################################################################################################
http://blog.csdn.net/u012116457/article/details/24936517
 做web项目时对代码修改后浏览器端不生效的应对方法（持续更新）
2014-05-03 22:20 1848人阅读 评论(0) 收藏 举报
 分类： Web（64）  
版权声明：本文为博主原创文章，未经博主允许不得转载。

做web项目时，经常会遇到修改了代码，但浏览器端没有生效，原因是多种多样的，我会根据我遇到的情况逐步更新解决办法


1.运行的时候采用debug模式，一般情况下使用项目部署按钮右边那个按钮下的tomcat7中的run就行，如果使用的是serves中的run serves，这种情况貌似不会自动编译

2.点击project菜单下的clean选项，在打开的窗口中选择你使用的项目，ok,这样会删除tomcat容器中关于该项目的一些信息，然后重新部署，运行

3.删除电脑中tomcat文件夹，重新解压，然后在myeclipse中重新导入tomcat

4,删除浏览器缓存：删除浏览器的历史记录和缓存信息（我今天就遇到这种情况了，上面三步试了好几次，就是没用，换了个浏览器发现修改的代码生效，才发觉应该是浏览器的问题）

5.待补充，欢迎大家提供方法
#########################################################################################################


#########################################################################################################
Servlet中解决中文乱码的方法
Servlet中解决中文乱码:

1) request中的中文乱码

   a) POST方式提交

  在获得提交表单信息之前调用request.setCharactersEncoding("UTF-8");

  b) GET方式提交

  在Tomcat的server.xml中配置

   <Service>

      <Connector URIEncoding="UTF-8">

         ...

      </Connector>

  </Service>

2) reponse中的中文乱码

    在通过response获得输出流之前调用response.setCharacterEncoding("UTF-8");
#########################################################################################################