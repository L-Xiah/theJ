
ThreeJs
(官网中的文档和示例是最全、最新的书，但需要耐心去查找)
ThreeJs是使用WebGL技术的前端3D开源框架，WebGL是html5所支持的一种特性，故而相对于其它3D技术（unity3D等）浏览器支持/兼容性好不需要安装额外的插件。
官网：https://threejs.org
github：https://github.com/mrdoob/three.js
在线编辑：https://jsfiddle.net/


工具Blender
Blender是三维开源软件，支持fbx格式三维文件，导出gltf文件（需要在Blender中安装插件，插件在github中）；原先Blender可导出json、js文件，由于在github中导出json的插件已移除了而推荐使用gltf文件。（Blender 2.8不需要插件）
插件glTF-Blender-Exporter（Blender2.79b,Khronos Group）
https://github.com/KhronosGroup/glTF-Blender-Exporter
插件glTF-Blender-IO(Blender 2.80,included by default in the Blender 2.8 Beta,Khronos Group)
https://github.com/KhronosGroup/glTF-Blender-IO


工具FBX2glTF
将fbx文件转为gltf文件(Facebook维护，在github中找源码)
FBX2glTF-windows-x64.exe（windows 64位）
使用方式：
1>进入cmd（FBX2glTF-windows-x64.exe路径下）
2>命令1：FBX2glTF-windows-x64.exe -e -i ***.fbx（只有一个gltf文件，不带bin文件）
2>命令2：FBX2glTF-windows-x64.exe ***.fbx（默认，带bin文件）





//THREE.Js编程
常用对象：camera、scene、renderers、Light、OrbitControls、Canvas
三维展示原理（即camera对三维物体的投影）

##坐标##
世界坐标系：三维坐标
屏幕坐标系：二维屏幕显示坐标
标准设备坐标系：二维平面坐标（原点在中心，向左和向上为正，x、y轴最大为1最小为-1）
(各坐标系之间的转换) 


##ObjectLoader##
加载三维文件

##Raycaster##
射线拾取，点击事件

##Box##
Box2/Box3(获取中心、大小->计算camera位置)
Object3D 获取中心点和尺寸（参考：https://segmentfault.com/a/1190000015169256）
Object3D 物体可以获取一个包含物体的 Box, 这个 Box 有一些功能, 比如获取中心点:
const box = new THREE.Box3().setFromObject(object);
const center = box.getCenter(new THREE.Vector3());

也可以用了获取物体的大小:
const size = box.getSize(new THREE.Vector3()).length();


##sprite##
二维标签（直接面向camera）


##加载三维文件操作步骤##
条件：三维文件-〉stp格式，工具软件-〉UG(组装约束)、Navisworks(分拆导出fbx)、FBX2glTF(导出gltf)、threeJs
1〉源文件：通用的三维文件格式->stp(简化)
2〉三维软件（UG）：新建模型文件-〉加载各源组件(stp)->设置约束->导出一个stp总资源文件
3〉导出fbx：使用Navisworks打开该stp总资源文件-〉可分别导出各部分fbx(隐藏其它部分，可配色)
4〉导出gltf：使用FBX2glTF工具将fbx导出成gltf
5〉threeJs中加载gltf文件(文件总大小建议不要超过30M)

